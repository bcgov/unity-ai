version: '3.8'
services:
  frontend:
    build:
      context: ./recap
      dockerfile: Dockerfile.dev
    ports:
      - "80:80"
    volumes:
      - ./recap/src:/app/src
      - ./recap/angular.json:/app/angular.json
      - ./recap/package.json:/app/package.json
      - ./recap/tsconfig.json:/app/tsconfig.json
    environment:
      - NODE_ENV=development
    networks:
      - unity-ai-network
    depends_on:
      - backend

  backend:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=unity_ai
      - DB_USER=unity_user
      - DB_PASSWORD=unity_pass
    env_file:
      - .env
    volumes:
      - .:/app
      - ./QDECOMP_examples.json:/app/QDECOMP_examples.json
      - ./sql_examples.json:/app/sql_examples.json
    networks:
      - unity-ai-network
    depends_on:
      postgres:
        condition: service_healthy
    command: python -m flask --app main run --host=0.0.0.0 --port=5000 --reload

    
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - unity-ai-network
    depends_on:
      postgres:
        condition: service_healthy